- name: Get cluster version
  block:
  - name: Check cluster version for 4.x
    k8s_facts:
      api_version: config.openshift.io/v1
      kind: ClusterVersion
    register: cv
    until: cv.resources | length != 0
    retries: 15

  - fail:
      msg: "Ocp is not a 4.x cluster"
    when: cv.resources | length == 0

  - debug:
      msg: 4.x cluster. Start /src directory configuration

  - name: Get all nodes
    k8s_facts:
      kind: Node
    register: nodes
    until: nodes.resources | length > 0

  - set_fact:
      all_nodes: "{{ nodes | json_query('resources[].metadata.name') }}"

  - name: Configuring /srv directory in all cluster nodes
    expect:
      command: "oc debug node/{{ item }}"
      echo: yes
      responses:
        (?i).*#:
          - "chroot /host\n"
          - "mkdir -p /srv/;  chcon -Rt svirt_sandbox_file_t /srv/\n"
          - "exit\n"
          - "exit\n"
    loop: "{{ all_nodes }}"

  rescue:
  - name: Skip nodes preparation
    debug:
      msg: "Skip this step for 3.x clusters"


- name: Create RBAC
  k8s:
    state : present
    namespace: "{{ installation_namespace }}"
    definition: "{{ lookup('file', 'rbac.yaml' )}}"

- name: Create SCC
  k8s:
    state : present
    namespace: "{{ installation_namespace }}"
    definition: "{{ lookup('file', 'scc.yaml' )}}"

- name: Deploy provisioner
  k8s:
    state : present
    namespace: "{{ installation_namespace }}"
    definition: "{{ lookup('file', 'deployment.yaml' )}}"

- name: Create storage class
  k8s:
    state : present
    namespace: "{{ installation_namespace }}"
    definition: "{{ lookup('file', 'class.yaml' )}}"


- name: Check provisioner pod status
  k8s_facts:
    kind: Pod
    namespace: "{{ installation_namespace }}"
    label_selectors: "app=nfs-provisioner"
    field_selectors: 
    - status.phase=Running
  register: pod
  until: "true in (pod | json_query('resources[].status.containerStatuses[].ready'))"
  retries: 30
